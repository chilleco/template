services:
  api:
    build:
      context: ../backend
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    volumes:
      - ../backend:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:pass@db:5432/app
      - REDIS_URL=redis://:redispass@redis:6379/0
      - SENTRY_DSN=
    depends_on:
      - db
      - redis

  worker:
    build:
      context: ../backend
    volumes:
      - ../backend:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:pass@db:5432/app
      - REDIS_URL=redis://:redispass@redis:6379/0
      - SENTRY_DSN=
    depends_on:
      - redis
      - db

  frontend:
    build:
      context: ../frontend
    command: ["npm", "run", "dev"]
    volumes:
      - ../frontend:/app
    ports:
      - "3000:3000"
    environment:
      - API_INTERNAL_URL=http://api:8000
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - SENTRY_DSN=
      - NODE_ENV=development

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d app"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--requirepass", "redispass"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispass", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
