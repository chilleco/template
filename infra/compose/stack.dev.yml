version: "3.9"

networks:
  traefik-public:
    external: true
  app-net: {}

volumes:
  traefik-cert: {}

services:
  traefik:
    image: traefik:v3.0
    command:
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.le.acme.email=${LE_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --accesslog=true
      - --log.level=INFO
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-cert:/letsencrypt
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    networks:
      - traefik-public
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true
        - traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DASHBOARD_HOST_DEV}`)
        - traefik.http.routers.traefik.entrypoints=websecure
        - traefik.http.routers.traefik.tls.certresolver=le
        - traefik.http.routers.traefik.service=api@internal

  api:
    deploy:
      replicas: 2
      update_config:
        order: start-first
        parallelism: 1
        delay: 5s
      resources:
        limits:
          cpus: "1.0"
          memory: "1G"
      labels:
        - traefik.enable=true
        - traefik.http.routers.api-dev.rule=Host(`${API_HOST_DEV}`)
        - traefik.http.routers.api-dev.entrypoints=websecure
        - traefik.http.routers.api-dev.tls.certresolver=le
        - traefik.http.services.api-dev.loadbalancer.server.port=8000

  frontend:
    deploy:
      replicas: 2
      update_config:
        order: start-first
        parallelism: 1
        delay: 5s
      resources:
        limits:
          cpus: "1.0"
          memory: "1G"
      labels:
        - traefik.enable=true
        - traefik.http.routers.web-dev.rule=Host(`${WEB_HOST_DEV}`)
        - traefik.http.routers.web-dev.entrypoints=websecure
        - traefik.http.routers.web-dev.tls.certresolver=le
        - traefik.http.services.web-dev.loadbalancer.server.port=3000
