version: "3.9"

networks:
  traefik-public:
    external: true
  app-net: {}

services:
  api:
    image: ${IMAGE_API}:${TAG}
    env_file:
      - ${ENV_FILE}
    environment:
      # серверная часть (FastAPI) читает эти переменные
      - SENTRY_DSN=${SENTRY_DSN}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - UVICORN_WORKERS=1
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - app-net
      - traefik-public
    expose:
      - "8000"

  worker:
    image: ${IMAGE_API}:${TAG}
    command: ["celery", "-A", "app.tasks.celery_app", "worker", "--concurrency=4", "-l", "INFO"]
    env_file:
      - ${ENV_FILE}
    environment:
      - SENTRY_DSN=${SENTRY_DSN}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - app-net

  frontend:
    image: ${IMAGE_WEB}:${TAG}
    env_file:
      - ${ENV_FILE}
    environment:
      # SSR (сервер) ходит во внутренний API, клиент — во внешний домен
      - API_INTERNAL_URL=http://api:8000
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - SENTRY_DSN=${SENTRY_DSN_FRONT}
      - NODE_ENV=production
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - app-net
      - traefik-public
    expose:
      - "3000"

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - app-net
