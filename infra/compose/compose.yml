version: "3.9"
services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    env_file: ${ENV_FILE:-.env}          # указываем .env файл (по умолчанию .env в корне или переменной ENV_FILE)
    environment:
      - ENV=${ENV}                       # тип окружения (LOCAL/DEV/PROD)
      - MONGO_URI=${MONGO_URI}
      - REDIS_URI=${REDIS_URI}
      - OTHER_CONFIG=${OTHER_CONFIG}
    volumes:
      - app_data:/app/data               # прим.: хранилище файлов (uploads) 
      - logs_data:/app/logs              # прим.: если логируем в файл (опционально)
    ports:
      - "127.0.0.1:8000:8000"            # публикуем порт бэкенда (на localhost только)
    depends_on:
      - mongo
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: ${ENV_FILE:-.env}
    environment:
      - ENV=${ENV}
      - API_URL=${API_URL}               # базовый URL API (может отличаться локально/на прод)
    volumes:
      - node_modules_cache:/app/node_modules # кеш npm (в dev можно примонтировать)
    ports:
      - "127.0.0.1:3000:3000"            # Next.js порт
    depends_on:
      - backend                         # (если фронт должен дождаться API, обычно не обязательно)

  mongo:
    image: mongo:6.0
    volumes:
      - mongo_data:/data/db             # постоянное хранение данных Mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
      - MONGO_INITDB_DATABASE=${MONGO_DBNAME}
    # ports: [ "27017:27017" ] # локально можно открыть порт, но не обязательно (backend подключается по внутренней сети)

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data                # хранение очереди (необязательно в продакшене, но полезно для долговременного хранения)
    # ports: [ "6379:6379" ] # обычно нет надобности открывать наружу

# Объявление именованных томов (чтобы Docker создавал их вне контейнеров)
volumes:
  mongo_data:
  redis_data:
  app_data:
  logs_data:
  node_modules_cache:
