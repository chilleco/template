name: CI-CD Pipeline

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

jobs:
  # Job 1: Запуск тестов (CI) на каждый push и PR
  test:
    runs-on: ubuntu-latest
    env:
      ENV: TEST                # указываем тестовое окружение
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build and run tests
        run: |
          docker compose -f docker-compose.yml -f docker-compose.test.yml up --build --abort-on-container-exit --exit-code-from backend
      # Этот шаг соберет контейнеры и выполнит тесты (как описано в разделе Compose для тестов)

  # Job 2: Сборка и пуш Docker-образов (выполняется после успешных тестов)
  build_push:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU (for multi-arch, optional)
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io        # например, GitHub Container Registry
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/USERNAME/myapp-backend:${{ github.ref_name }}-${{ github.sha }}   # уникальный тег (ветка+коммит)
      - name: Build and push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/USERNAME/myapp-frontend:${{ github.ref_name }}-${{ github.sha }}

  # Job 3: Деплой на Dev сервер (при пуше в dev)
  deploy_dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs: [build_push]
    steps:
      - name: Deploy to Dev via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Логинимся в регистр, чтобы тянуть образы
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin
            cd /opt/myapp/              # папка на сервере с docker-compose файлами
            # Обновляем .env.dev, можно передать через scp или хранить на сервере
            docker compose pull         # тянем обновленные образы (т.к. теги совпадают с тем, что пушнули)
            docker compose up -d --remove-orphans   # разворачиваем обновленные контейнеры
